# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# The home page
GET     /                                   controllers.About.index()

# Authentication
GET     /login                              controllers.Application.login()
POST    /login                              controllers.Application.authenticate()
GET     /logout                             controllers.Application.logout()

# Javascript routing
GET     /assets/javascripts/routes          controllers.Application.javascriptRoutes()

# Map static resources from the /public folder to the /public path
GET     /assets/*file                       controllers.Assets.at(path="/public", file)

# Licence form
GET     /ukwa/licence                       controllers.LicenceController.index()
POST    /ukwa/licence/submit                controllers.LicenceController.submit()
GET     /ukwa/licence/result                controllers.LicenceController.result()
GET     /ukwa/licenceform/:url              controllers.LicenceController.form(url)
GET     /ukwa/licenceformview/:url          controllers.LicenceController.formview(url)

# Nomination form
POST    /ukwa/nomination/submit             controllers.Nominations.submit()
GET     /ukwa/nomination/result             controllers.Nominations.result()
GET     /ukwa/nominationform                controllers.Nominations.formpage()

# Tabs
GET     /collections                        controllers.Collections.index()
GET    	/collections/list                  	controllers.Collections.list(p:Int ?= 0, s ?= "name", o ?= "asc", f ?= "")
GET    	/collections/search                 controllers.Collections.search()
GET    	/collections/filterbyjson/:name		controllers.Collections.filterByJson(name)
GET     /collections/new/:title      		controllers.Collections.create(title)
GET     /collections/:collection            controllers.Collections.view(collection)
GET     /collections/:collection/edit       controllers.Collections.edit(collection)
GET     /collections/:sites/sites			controllers.Collections.sites(sites)
POST    /collections             			controllers.Collections.save()

GET     /taxonomy                           controllers.TaxonomiesController.index()
GET    	/taxonomy/list                  	controllers.TaxonomiesController.list(p:Int ?= 0, s ?= "name", o ?= "asc", f ?= "")
GET    	/taxonomy/search                    controllers.TaxonomiesController.search()
GET    	/taxonomy/filterbyjson/:name		controllers.TaxonomiesController.filterByJson(name)
GET     /taxonomy/new/:name      		    controllers.TaxonomiesController.create(name)
GET     /taxonomy/:collection               controllers.TaxonomiesController.view(collection)
GET     /taxonomy/:collection/edit          controllers.TaxonomiesController.edit(collection)
POST    /taxonomy             			    controllers.TaxonomiesController.save()

GET     /organisations                      controllers.Organisations.index()
GET     /organisations/list                 controllers.Organisations.list(p:Int ?= 0, s ?= "name", o ?= "asc", q ?= "")
GET     /organisations/search               controllers.Organisations.search()
GET    	/organisations/filterbyjson/:title	controllers.Organisations.filterByJson(title)
GET     /organisations/new/:title      		controllers.Organisations.create(title)
GET     /organisations/:url        			controllers.Organisations.view(url)
GET     /organisations/:url/edit     		controllers.Organisations.edit(url)
POST    /organisations                 		controllers.Organisations.save()
GET     /organisations/:sites/sites         controllers.Organisations.sites(sites)
GET     /organisations/:organisation/admin  controllers.Organisations.admin(organisation)
POST    /organisations/admin             	controllers.Organisations.saveAdmin()

GET     /curators                           controllers.Curators.index()
GET     /curators/list                      controllers.Curators.list(p:Int ?= 0, s ?= "name", o ?= "asc", f ?= "")
GET     /curators/search               		controllers.Curators.search()
GET    	/curators/filterbyjson/:name		controllers.Curators.filterByJson(name)
GET     /curators/new/:title      			controllers.Curators.create(title)
GET     /curators/:url        				controllers.Curators.view(url)
GET     /curators/:user/edit                controllers.Curators.edit(user)
GET     /curators/:user/sites               controllers.Curators.sites(user)

GET     /roles                              controllers.Roles.index()
GET     /roles/list							controllers.Roles.list(p:Int ?= 0, s ?= "name", o ?= "asc", f ?= "")
GET    	/roles/search                       controllers.Roles.search()
GET    	/roles/filterbyjson/:name			controllers.Roles.filterByJson(name)
GET     /roles/:role						controllers.Roles.view(role)
GET     /roles/:role/edit					controllers.Roles.edit(role)
GET     /roles/new/:role                    controllers.Roles.create(role)
GET     /roles/:role/admin                  controllers.Roles.admin(role)
POST    /roles/save                         controllers.Roles.save()
POST    /roles/saveAdmin                    controllers.Roles.saveAdmin()

GET     /permissions                        controllers.Permissions.index()
GET     /permissions/list					controllers.Permissions.list(p:Int ?= 0, s ?= "name", o ?= "asc", f ?= "")
GET		/permissions/search                 controllers.Permissions.search()
GET    	/permissions/filterbyjson/:name		controllers.Permissions.filterByJson(name)
GET     /permissions/:permission            controllers.Permissions.view(permission)
GET     /permissions/:permission/edit       controllers.Permissions.edit(permission)
GET     /permissions/create/:permission     controllers.Permissions.create(permission)
POST    /permissions                   		controllers.Permissions.save()

GET     /tags                               controllers.Tags.index()
GET     /tags/list							controllers.Tags.list(p:Int ?= 0, s ?= "name", o ?= "asc", f ?= "")
GET    	/tags/search                        controllers.Tags.search()
GET    	/tags/filterbyjson/:name	        controllers.Tags.filterByJson(name)
GET     /tags/:tag                          controllers.Tags.view(tag)
GET     /tags/:tag/edit                     controllers.Tags.edit(tag)
GET     /tags/new/:tag                      controllers.Tags.create(tag)
POST    /tags	                          	controllers.Tags.save()

GET     /flags                              controllers.Flags.index()
GET     /flags/list							controllers.Flags.list(p:Int ?= 0, s ?= "name", o ?= "asc", f ?= "")
GET    	/flags/search                       controllers.Flags.search()
GET    	/flags/filterbyjson/:name	        controllers.Flags.filterByJson(name)
GET     /flags/:flag                        controllers.Flags.view(flag)
GET     /flags/:flag/edit                   controllers.Flags.edit(flag)
GET     /flags/new/:flag                    controllers.Flags.create(flag)
POST    /flags                         		controllers.Flags.save()

GET     /crawlpermissions                   	controllers.CrawlPermissions.index()
GET    	/crawlpermissions/search            	controllers.CrawlPermissions.search()
GET    	/crawlpermissions/filterbyjson/:name	controllers.CrawlPermissions.filterByJson(name)
GET     /crawlpermissions/new/:permission     	controllers.CrawlPermissions.create(permission)
GET    	/crawlpermissions/templates     		controllers.CrawlPermissions.templates()
GET    	/crawlpermissions/contacttemplates    	controllers.CrawlPermissions.contactpersons()
POST    /crawlpermissions/save               	controllers.CrawlPermissions.save()
POST    /crawlpermissions/send              	controllers.CrawlPermissions.send()
GET    	/crawlpermissions/licences        		controllers.CrawlPermissions.licences()
GET    	/crawlpermissions/refusals        		controllers.CrawlPermissions.refusals()
GET    	/crawlpermissions/communicationlogs    	controllers.CrawlPermissions.communicationLogs()
GET     /crawlpermissions/:permission        	controllers.CrawlPermissions.view(permission)
GET     /crawlpermissions/:permission/edit    	controllers.CrawlPermissions.edit(permission)

GET     /reports                   	            controllers.Reports.index()
GET    	/reports/search            	            controllers.Reports.search()
GET    	/reports/summary     		            controllers.Reports.summary()
GET    	/reports/openLicences    	            controllers.Reports.openLicences()
GET    	/reports/recordCreation        		    controllers.Reports.recordCreation()
GET    	/reports/qa                         	controllers.Reports.qa()
GET    	/reportsqa/search            	        controllers.ReportsQa.search()

GET     /mailtemplates                       	controllers.MailTemplates.index()
GET     /mailtemplates/search               	controllers.MailTemplates.search()
GET    	/mailtemplates/filterbyjson/:name		controllers.MailTemplates.filterByJson(name)
GET     /mailtemplates/new/:template         	controllers.MailTemplates.create(template)
GET     /mailtemplates/:template             	controllers.MailTemplates.view(template)
GET     /mailtemplates/:template/edit        	controllers.MailTemplates.edit(template)
POST    /mailtemplates                  		controllers.MailTemplates.save()

GET     /targets                            controllers.Targets.index()
GET    	/targets/search          			controllers.Targets.search()
GET    	/targets/search-targets    			controllers.Targets.searchTargets()
GET    	/targets/search-targets-by-collection	controllers.Targets.searchTargetsByCollection()
GET     /targets/search-targets-by-user  	controllers.Targets.searchTargetsByUser()
GET    	/targets/filterbyjson/:url			controllers.Targets.filterByJson(url)
GET    	/targets/list/                  	controllers.Targets.list(p:Int ?= 0, s ?= "name", o ?= "asc", f ?= "")
GET    	/targets/targets/                  	controllers.Targets.targets(p:Int ?= 0, s ?= "name", o ?= "asc", f ?= "", query_curator ?= "", query_organisation ?= "", query_subject ?= "", query_crawl_frequency ?= "", query_depth ?= "", query_collection ?= "", query_license ?= "", page_size:Int ?= 10)
GET    	/targets/collectiontargets/        	controllers.Targets.collectionTargets(p:Int ?= 0, s ?= "name", o ?= "asc", f ?= "", collection_url ?= "")
GET    	/targets/usertargets/           	controllers.Targets.userTargets(p:Int ?= 0, s ?= "name", o ?= "asc", f ?= "", user_url ?= "", query_subject ?= "", query_collection ?= "")
GET     /targets/lookup						controllers.Targets.lookup()
GET     /targets/new/:title      			controllers.Targets.create(title)
GET    	/targets/export/:frequency			controllers.Targets.exportByFrequencyJson(frequency)

GET     /targets/:target                    controllers.Targets.view(target)
GET     /targets/:revision/revision         controllers.Targets.viewrevision(revision:Long)
GET     /targets/:target/edit               controllers.Targets.edit(target)

GET     /target/crawlpermissions/:target    controllers.CrawlPermissions.showCrawlPermissions(target)
GET     /target/licencerequest          	controllers.CrawlPermissions.licenceRequestForTarget(name, target)

GET     /contact                                controllers.Contact.index()
POST    /contact/send              	            controllers.Contact.send()

GET     /qa                                     controllers.QAController.index()
GET     /qa/list                                controllers.QAController.list(p:Int ?= 0, s ?= "name", o ?= "asc", f ?= "", query_collection ?= "", query_qa_status ?= "")
GET     /qa/search               		        controllers.QAController.search()
GET    	/qa/filterbyjson/:name		            controllers.QAController.filterByJson(name)

# Navigation
GET     /addcontent                             controllers.AddContent.index()
GET     /findcontent                            controllers.FindContent.index()

GET     /exportlookup                           controllers.Export.index()
GET     /exportlookup/csv                       controllers.Export.search()

# Domain objects

GET     /instance/:instance                 controllers.InstanceController.view(instance)
GET     /instancerevision/:revision         controllers.InstanceController.viewrevision(revision:Long)
GET     /instanceedit/:instance             controllers.InstanceController.edit(instance)

GET     /contactpersons                     controllers.ContactPersons.index()
GET    	/contactpersons/search              controllers.ContactPersons.search()
GET    	/contactpersons/filterbyjson/:name	controllers.ContactPersons.filterByJson(name)
GET     /contactpersons/new/:person         controllers.ContactPersons.create(person)
GET     /contactpersons/:person/edit        controllers.ContactPersons.edit(person)
GET     /contactpersons/:person             controllers.ContactPersons.view(person)
POST    /contactpersons                 	controllers.ContactPersons.save()

GET     /licence                            controllers.LicenceEdit.index()
POST    /licence/filter/                    controllers.LicenceEdit.filter()
GET    	/licence/filterbyjson/:name	        controllers.LicenceEdit.filterByJson(name)

GET     /refusal                            controllers.PermissionRefusals.index()
GET     /refusal/search                    	controllers.PermissionRefusals.search()
GET    	/refusal/filterbyjson/:name	        controllers.PermissionRefusals.filterByJson(name)
GET     /refusal/:refusal                   controllers.PermissionRefusals.view(refusal)
GET     /refusal/:refusal/edit              controllers.PermissionRefusals.edit(refusal)
GET     /refusal/new/:refusal               controllers.PermissionRefusals.create(refusal)
POST    /refusal	                       	controllers.PermissionRefusals.save()

GET     /communicationlogs					controllers.CommunicationLogs.index()
POST    /communicationlogs/search          	controllers.CommunicationLogs.search()
GET    	/communicationlogs/filterbyjson/:name  controllers.CommunicationLogs.filterByJson(name)
GET     /communicationlogs/:log             controllers.CommunicationLogs.view(log)
GET     /communicationlogs/:log/edit        controllers.CommunicationLogs.edit(log)
GET     /communicationlogs/new/:log         controllers.CommunicationLogs.create(log)
POST    /communicationlogs		            controllers.CommunicationLogs.save()
GET     /communicationlogs/link/:permission controllers.CommunicationLogs.showLogs(permission)

GET     /nominations                        controllers.Nominations.index()
GET     /nominations/list					controllers.Nominations.list(p:Int ?= 0, s ?= "name", o ?= "asc", f ?= "")
GET		/nominations/search                 controllers.Nominations.search()
GET    	/nominations/filterbyjson/:name		controllers.Nominations.filterByJson(name)
GET     /nominations/:nomination            controllers.Nominations.view(nomination)
GET     /nominations/:nomination/edit       controllers.Nominations.edit(nomination)
GET     /nominations/create/:nomination     controllers.Nominations.create(nomination)
POST    /nominations/load/json         		controllers.Nominations.load()
POST    /nominations                   		controllers.Nominations.save()


# Forms
POST    /target/save-target                 controllers.TargetController.saveTarget()
POST    /instance/save-instance             controllers.InstanceController.saveInstance()
POST    /user                     			controllers.Curators.save()

GET     /instances                          controllers.Instances.index()
POST    /instances/search          			controllers.Instances.search()
GET    	/instances/filterbyjson/:url		controllers.Instances.filterByJson(url)
GET    	/instances/list/                  	controllers.Instances.list(p:Int ?= 0, s ?= "name", o ?= "asc", f ?= "")
GET     /instances/new/:title      			controllers.Instances.create(title)


# Scope
GET     /api/scope/:url                      controllers.TargetController.isInScope(url)
GET     /api/scopeintance/:url               controllers.InstanceController.isInScope(url)
GET     /api/licence/:url                    controllers.CrawlPermissions.crawlPermissionExist(url)
GET     /api/licencelevel/:url               controllers.CrawlPermissions.crawlPermissionExistAtHigherLevel(url)
GET     /api/licenceprompthigherlevel/:url   controllers.CrawlPermissions.checkForHigherLevelPrompt(url)

