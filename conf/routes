# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# The home page
GET     /                                   controllers.ApplicationController.index()

# Authentication
GET     /login                              controllers.ApplicationController.login()
POST    /login                              controllers.ApplicationController.authenticate()
GET     /logout                             controllers.ApplicationController.logout()

# Javascript routing
GET     /assets/javascripts/routes          controllers.ApplicationController.javascriptRoutes()

# Map static resources from the /public folder to the /public path
GET     /assets/*file                       controllers.Assets.at(path="/public", file)

# Licence form
GET     /ukwa/licenses                      controllers.LicenseController.index()
POST    /ukwa/licenses/submit               controllers.LicenseController.submit()
GET     /ukwa/licenses/result               controllers.LicenseController.result()
GET     /ukwa/licenseform/:url              controllers.LicenseController.form(url)
GET     /ukwa/licenseformview/:url          controllers.LicenseController.formview(url)

GET     /licenses                           controllers.LicenseController.indexFilter()
POST    /licenses/filter/                   controllers.LicenseController.filter()
GET    	/licenses/filterbyjson/:name	    controllers.LicenseController.filterByJson(name)

# Tabs
GET     /collections                        controllers.CollectionController.index()
GET    	/collections/list                  	controllers.CollectionController.list(p:Int ?= 0, s ?= "name", o ?= "asc", f ?= "")
GET    	/collections/search                 controllers.CollectionController.search()
GET    	/collections/filterbyjson/:name		controllers.CollectionController.filterByJson(name)
GET		/collections/new					controllers.CollectionController.newForm()
GET     /collections/:id            		controllers.CollectionController.view(id:Long)
GET     /collections/:url            		controllers.CollectionController.viewAct(url)
GET     /collections/:id/edit       		controllers.CollectionController.edit(id:Long)
GET     /collections/:id/sites				controllers.CollectionController.sites(id:Long)
POST    /collections             			controllers.CollectionController.save()
POST    /collections/:id             		controllers.CollectionController.update(id:Long)

GET     /subjects                           controllers.SubjectController.index()
GET    	/subjects/list                  	controllers.SubjectController.list(p:Int ?= 0, s ?= "name", o ?= "asc", f ?= "")
GET    	/subjects/search                    controllers.SubjectController.search()
GET    	/subjects/filterbyjson/:name		controllers.SubjectController.filterByJson(name)
GET		/subjects/new						controllers.SubjectController.newForm()
GET     /subjects/:id                  		controllers.SubjectController.view(id:Long)
GET     /subjects/:id/edit             		controllers.SubjectController.edit(id:Long)
GET     /subjects/:id/targets			    controllers.SubjectController.sites(id:Long)
POST    /subjects             			    controllers.SubjectController.save()
POST    /subjects/:id             			controllers.SubjectController.update(id:Long)

GET     /taxonomy                           controllers.TaxonomyController.index()
GET    	/taxonomy/list                  	controllers.TaxonomyController.list(p:Int ?= 0, s ?= "name", o ?= "asc", f ?= "")
GET    	/taxonomy/search                    controllers.TaxonomyController.search()
GET    	/taxonomy/filterbyjson/:name		controllers.TaxonomyController.filterByJson(name)
GET     /taxonomy/new/:name      		    controllers.TaxonomyController.create(name)
GET     /taxonomy/:id               		controllers.TaxonomyController.view(id:Long)
GET     /taxonomy/:id/edit              	controllers.TaxonomyController.edit(id:Long)
POST    /taxonomy             			    controllers.TaxonomyController.save()

GET     /organisations                      controllers.OrganisationController.index()
GET     /organisations/list                 controllers.OrganisationController.list(p:Int ?= 0, s ?= "name", o ?= "asc", q ?= "")
GET     /organisations/search               controllers.OrganisationController.search()
GET    	/organisations/filterbyjson/:title	controllers.OrganisationController.filterByJson(title)
GET     /organisations/new      			controllers.OrganisationController.newForm()
GET     /organisations/:id                  controllers.OrganisationController.view(id:Long)
GET     /organisations/act/:id              controllers.OrganisationController.viewAct(id)
GET     /organisations/wct/:id              controllers.OrganisationController.viewWct(id)

GET     /organisations/:id/edit     		controllers.OrganisationController.edit(id:Long)
GET     /organisations/:id/sites         	controllers.OrganisationController.sites(id:Long)
GET     /organisations/:id/admin  			controllers.OrganisationController.admin(id:Long)
POST    /organisations/admin             	controllers.OrganisationController.saveAdmin()
POST    /organisations                 		controllers.OrganisationController.save()
POST    /organisations/:id                 	controllers.OrganisationController.update(id:Long)

GET     /curators                           controllers.UserController.index()
GET     /curators/list                      controllers.UserController.list(p:Int ?= 0, s ?= "name", o ?= "asc", f ?= "")
GET     /curators/search               		controllers.UserController.search()
GET    	/curators/filterbyjson/:name		controllers.UserController.filterByJson(name)
GET     /curators/new      					controllers.UserController.newForm()
GET     /curators/:id                  		controllers.UserController.view(id:Long)
GET     /curators/act/:id              		controllers.UserController.viewAct(id)
GET     /curators/wct/:id              		controllers.UserController.viewWct(id)
GET     /curators/:id/edit                	controllers.UserController.edit(id:Long)
GET     /curators/:id/sites               	controllers.UserController.sites(id:Long)
POST    /curators                     		controllers.UserController.save()
POST    /curators/:id                     	controllers.UserController.update(id:Long)

GET     /roles                              controllers.RoleController.index()
GET     /roles/list							controllers.RoleController.list(p:Int ?= 0, s ?= "name", o ?= "asc", f ?= "")
GET    	/roles/search                       controllers.RoleController.search()
GET    	/roles/filterbyjson/:name			controllers.RoleController.filterByJson(name)
GET     /roles/:id							controllers.RoleController.view(id:Long)
GET     /roles/:id/edit						controllers.RoleController.edit(id:Long)
GET     /roles/new/:role                    controllers.RoleController.create(role)
GET     /roles/:id/admin                  	controllers.RoleController.admin(id:Long)
POST    /roles/save                         controllers.RoleController.save()
POST    /roles/saveAdmin                    controllers.RoleController.saveAdmin()

GET     /permissions                        controllers.PermissionController.index()
GET     /permissions/list					controllers.PermissionController.list(p:Int ?= 0, s ?= "name", o ?= "asc", f ?= "")
GET		/permissions/search                 controllers.PermissionController.search()
GET    	/permissions/filterbyjson/:name		controllers.PermissionController.filterByJson(name)
GET     /permissions/:id            		controllers.PermissionController.view(id:Long)
GET     /permissions/:id/edit       		controllers.PermissionController.edit(id:Long)
GET     /permissions/create/:permission     controllers.PermissionController.create(permission)
POST    /permissions                   		controllers.PermissionController.save()
POST    /permissions/:id                   	controllers.PermissionController.update(id:Long)

GET     /tags                               controllers.TagController.index()
GET     /tags/list							controllers.TagController.list(p:Int ?= 0, s ?= "name", o ?= "asc", f ?= "")
GET    	/tags/search                        controllers.TagController.search()
GET    	/tags/filterbyjson/:name	        controllers.TagController.filterByJson(name)
GET     /tags/:id                          	controllers.TagController.view(id:Long)
GET     /tags/:id/edit                     	controllers.TagController.edit(id:Long)
GET     /tags/new/:tag                      controllers.TagController.create(tag)
POST    /tags	                          	controllers.TagController.save()

GET     /flags                              controllers.FlagController.index()
GET     /flags/list							controllers.FlagController.list(p:Int ?= 0, s ?= "name", o ?= "asc", f ?= "")
GET    	/flags/search                       controllers.FlagController.search()
GET    	/flags/filterbyjson/:name	        controllers.FlagController.filterByJson(name)
GET     /flags/new                   		controllers.FlagController.newForm()
GET     /flags/:id                        	controllers.FlagController.view(id:Long)
GET     /flags/:id/edit                   	controllers.FlagController.edit(id:Long)
POST    /flags                         		controllers.FlagController.save()
POST    /flags/:id                         	controllers.FlagController.update(id:Long)

GET     /crawlpermissions                   	controllers.CrawlPermissionController.index()
GET     /crawlpermissions/list                  controllers.CrawlPermissionController.list(p:Int ?= 0, s ?= "name", o ?= "asc", f ?= "", status ?= "QUEUED", sel ?= "selectall")
GET    	/crawlpermissions/search            	controllers.CrawlPermissionController.search()
GET    	/crawlpermissions/filterbyjson/:name	controllers.CrawlPermissionController.filterByJson(name)
GET     /crawlpermissions/new     				controllers.CrawlPermissionController.newForm()
POST    /crawlpermissions/send              	controllers.CrawlPermissionController.send()
POST    /crawlpermissions/sendPreview          	controllers.CrawlPermissionController.sendPreview()
GET    	/crawlpermissions/refusals        		controllers.CrawlPermissionController.refusals()
GET     /crawlpermissions/:id        			controllers.CrawlPermissionController.view(id:Long)
GET     /crawlpermissions/:id/edit    			controllers.CrawlPermissionController.edit(id:Long)
POST    /crawlpermissions/save               	controllers.CrawlPermissionController.save()
POST    /crawlpermissions/update/:id            controllers.CrawlPermissionController.update(id:Long)

GET     /reports                   	            controllers.ReportController.index()
GET    	/reports/search            	            controllers.ReportController.search()
GET    	/reports/summary     		            controllers.ReportController.summary()
GET    	/reports/openLicences    	            controllers.ReportController.openLicences()
GET    	/reports/recordCreation        		    controllers.ReportController.recordCreation()
GET    	/reports/qa                         	controllers.ReportController.qa()
GET    	/reportscreation               	        controllers.ReportController.indexCreation() 
GET    	/reportscreation/search                 controllers.ReportController.searchCreation()
GET    	/reportscreation/targets/               controllers.ReportController.targets(p:Int ?= 0, s ?= "name", o ?= "asc", curator:Long ?= 0, organisation:Long ?= 0, startDate ?= "", endDate ?= "", npld ?= "", crawlFrequency ?= "", tld ?= "")
GET    	/reportsqa                  	        controllers.ReportQaController.index() 
GET    	/reportsqa/search            	        controllers.ReportQaController.search()
GET    	/reportsqa/switchReportQaTab/:name      controllers.ReportQaController.switchReportQaTab(name) 
GET    	/reportsqa/targets/                  	controllers.ReportQaController.targets(p:Int ?= 0, s ?= "name", o ?= "asc", status ?= "", curatorId:Long ?= 0, organisationId:Long ?= 0, startDate ?= "", endDate ?= "", collectionId:Long ?= 0)

GET     /mailtemplates                       	controllers.MailTemplateController.index()
GET     /mailtemplates/search               	controllers.MailTemplateController.search()
GET    	/mailtemplates/filterbyjson/:name		controllers.MailTemplateController.filterByJson(name)
GET     /mailtemplates/new         				controllers.MailTemplateController.newForm()
GET     /mailtemplates/:id             			controllers.MailTemplateController.view(id:Long)
GET     /mailtemplates/:id/edit        			controllers.MailTemplateController.edit(id:Long)
POST    /mailtemplates                  		controllers.MailTemplateController.save()
POST    /mailtemplates/:id                  	controllers.MailTemplateController.update(id:Long)

GET     /targets                            	controllers.TargetController.index()
POST   	/targets/search          				controllers.TargetController.search()
GET    	/targets/search-targets    				controllers.TargetController.searchTargets()
GET    	/targets/search-targets-by-collection	controllers.TargetController.searchTargetsByCollection()
GET    	/targets/search-targets-by-organisation	controllers.TargetController.searchTargetsByOrganisation()
GET     /targets/search-targets-by-user  		controllers.TargetController.searchTargetsByUser()
GET    	/targets/search-targets-by-subject		controllers.TargetController.searchTargetsBySubject()

GET    	/targets/filterbyjson/:url			controllers.TargetController.filterByJson(url)
GET    	/targets/lookup                  	controllers.TargetController.lookup(p:Int ?= 0, s ?= "title", o ?= "asc", f ?= "")
GET    	/targets/list                  		controllers.TargetController.list(p:Int ?= 0, s ?= "name", o ?= "asc", f ?= "", curatorId:Long ?= 0, organisationId:Long ?= 0, subjects ?= "", crawlFrequency ?= "", depth ?= "", collections ?= "", licenseId:Long ?= 0, pageSize:Int ?= 10, flagId:Long ?= 0)

GET    	/targets/collectiontargets        	controllers.TargetController.collectionTargets(p:Int ?= 0, s ?= "name", o ?= "asc", f ?= "", collectionId:Long ?= 0)
GET    	/targets/organisationtargets/       controllers.TargetController.organisationTargets(p:Int ?= 0, s ?= "name", o ?= "asc", f ?= "", organisationId:Long)
GET    	/targets/usertargets/           	controllers.TargetController.userTargets(p:Int ?= 0, s ?= "name", o ?= "asc", f ?= "", userId:Long, subjectId:Long ?= 0, collectionId:Long ?= 0)
GET    	/targets/subjecttargets/        	controllers.TargetController.subjectTargets(p:Int ?= 0, s ?= "name", o ?= "asc", f ?= "", subjectId:Long ?= 0)
#POST    /targets/new/create                 controllers.TargetController.create(title)
GET    	/targets/export/ld/:frequency		controllers.TargetController.exportLdFrequencyJson(frequency)
GET    	/targets/export/by/:frequency		controllers.TargetController.exportByFrequencyJson(frequency)

GET     /targets/:id                      	controllers.TargetController.view(id:Long)
GET     /targets/act/:id                    controllers.TargetController.viewAct(id)
GET     /targets/wct/:id                    controllers.TargetController.viewWct(id)
GET     /targets/:revision/revision         controllers.TargetController.viewrevision(revision:Long)
GET     /targets/:id/edit                   controllers.TargetController.edit(id:Long)
POST    /targets                	 		controllers.TargetController.save()
POST    /targets/:id              			controllers.TargetController.update(id:Long)


GET     /target/crawlpermissions/:target    controllers.CrawlPermissionController.showCrawlPermissions(target)
GET     /target/licencerequest          	controllers.CrawlPermissionController.licenceRequestForTarget(name, target)
GET     /target/archive/:id                 controllers.TargetController.archive(id:Long)

GET     /instances                          controllers.InstanceController.index()
GET    	/instances/search          			controllers.InstanceController.search()
GET    	/instances/filterbyjson/:url		controllers.InstanceController.filterByJson(url)
GET    	/instances/list/                  	controllers.InstanceController.list(p:Int ?= 0, s ?= "name", o ?= "asc", f ?= "")
GET     /instances/new/:title      			controllers.InstanceController.create(title)
GET    	/instances/listbytarget/           	controllers.InstanceController.listByTarget(p:Int ?= 0, s ?= "name", o ?= "asc", f ?= "", t ?= "")
GET     /instances/showbytarget/:url		controllers.InstanceController.showByTarget(url)

GET     /instances/:id                		controllers.InstanceController.view(id:Long)
GET     /instances/act/:id                  controllers.InstanceController.viewAct(id)
GET     /instances/wct/:id                  controllers.InstanceController.viewWct(id)
GET     /instances/:id/edit             	controllers.InstanceController.edit(id:Long)
GET     /instances/:revision/revision       controllers.InstanceController.viewrevision(revision:Long)
POST    /instances	             			controllers.InstanceController.save()
POST    /instances/:id              		controllers.InstanceController.update(id:Long)

GET     /contact                                controllers.ContactController.index()
POST    /contact/send              	            controllers.ContactController.send()

GET     /qa                                     controllers.QAController.index()
GET     /qa/list                                controllers.QAController.list(p:Int ?= 0, s ?= "name", o ?= "asc", f ?= "", query_collection ?= "", query_qa_status ?= "")
GET     /qa/search               		        controllers.QAController.search()
GET    	/qa/filterbyjson/:name		            controllers.QAController.filterByJson(name)

# Navigation
GET     /addcontent                             controllers.ApplicationController.addContent()
GET     /findcontent                            controllers.ApplicationController.findContent()

GET     /exportlookup                           controllers.ExportController.index()
GET     /exportlookup/csv                       controllers.ExportController.search()

# Domain objects

GET     /contactpersons                     controllers.ContactPersonController.index()
GET    	/contactpersons/search              controllers.ContactPersonController.search()
GET    	/contactpersons/filterbyjson/:name	controllers.ContactPersonController.filterByJson(name)
GET     /contactpersons/new         		controllers.ContactPersonController.newForm()
GET     /contactpersons/:id/edit        	controllers.ContactPersonController.edit(id:Long)
GET     /contactpersons/:id             	controllers.ContactPersonController.view(id:Long)
POST    /contactpersons                 	controllers.ContactPersonController.save()
POST    /contactpersons/:id                 controllers.ContactPersonController.update(id:Long)

GET     /refusal                            controllers.PermissionRefusalController.index()
GET     /refusal/search                    	controllers.PermissionRefusalController.search()
GET    	/refusal/filterbyjson/:name	        controllers.PermissionRefusalController.filterByJson(name)
GET     /refusal/:id                   		controllers.PermissionRefusalController.view(id:Long)
GET     /refusal/:id/edit              		controllers.PermissionRefusalController.edit(id:Long)
GET     /refusal/new/:refusal               controllers.PermissionRefusalController.create(refusal)
POST    /refusal	                       	controllers.PermissionRefusalController.save()

GET     /communicationlogs					controllers.CommunicationLogController.index()
GET     /communicationlogs/new         		controllers.CommunicationLogController.newForm()
POST    /communicationlogs/search          	controllers.CommunicationLogController.search()
GET    	/communicationlogs/filterbyjson/:name  controllers.CommunicationLogController.filterByJson(name)
GET     /communicationlogs/:id             	controllers.CommunicationLogController.view(id:Long)
GET     /communicationlogs/:id/edit        	controllers.CommunicationLogController.edit(id:Long)
GET     /communicationlogs/new/:log         controllers.CommunicationLogController.create(log)
POST    /communicationlogs		            controllers.CommunicationLogController.save()
POST    /communicationlogs/:id		        controllers.CommunicationLogController.update(id:Long)
GET     /communicationlogs/link/:permission controllers.CommunicationLogController.showLogs(permission)

# Nomination form
POST    /ukwa/nomination/submit             controllers.NominationController.submit()
GET     /ukwa/nomination/result             controllers.NominationController.result()
GET     /ukwa/nominationform                controllers.NominationController.formpage()
GET     /nominations                        controllers.NominationController.index()
GET     /nominations/list					controllers.NominationController.list(p:Int ?= 0, s ?= "name", o ?= "asc", f ?= "")
GET		/nominations/search                 controllers.NominationController.search()
GET    	/nominations/filterbyjson/:name		controllers.NominationController.filterByJson(name)
GET     /nominations/new					controllers.NominationController.newForm()
GET     /nominations/:id            		controllers.NominationController.view(id:Long)
GET     /nominations/:id/edit       		controllers.NominationController.edit(id:Long)
POST    /nominations/load/json         		controllers.NominationController.load()
POST    /nominations                   		controllers.NominationController.save()
POST    /nominations/:id              		controllers.NominationController.update(id:Long)


# Scope
#GET     /api/scope/:url                      controllers.TargetController.isInScope(url)
#GET     /api/scopeintance/:url               controllers.InstanceController.isInScope(url)
GET     /api/licence/:url                    controllers.CrawlPermissionController.crawlPermissionExist(url)
GET     /api/licencelevel/:url               controllers.CrawlPermissionController.crawlPermissionExistAtHigherLevel(url)
GET     /api/licenceprompthigherlevel/:url   controllers.CrawlPermissionController.checkForHigherLevelPrompt(url)
GET     /api/suggested_collections/:url      controllers.TargetController.getSuggestedCollections(url)
GET     /api/suggested_collections_filter/:url      controllers.TargetController.getSuggestedCollectionsFilter(url)
#GET     /api/subjects/:url                   controllers.TargetController.getSubjectTree(url)
#GET     /api/subjects_filter/:url            controllers.TargetController.getSubjectTreeFilter(url)
GET     /api/subjects_instance/:url          controllers.InstanceController.getSubjectTree(url)
GET     /api/suggested_collections_instance/:url      controllers.InstanceController.getSuggestedCollections(url)
#GET     /api/qa/dashboard/collections/:url   controllers.QAController.getCollections(url)

# Password management
GET     /passwords                           controllers.PasswordController.edit()
POST    /passwords            			 	 controllers.PasswordController.save()

# WhoIs check
GET     /whois                               controllers.WhoIsController.index()
GET     /whois/check            			 controllers.WhoIsController.check(total:Int ?= 0)

# Sample forms with validation
GET     /targets/blank/						controllers.TargetController.blank()
POST    /targets/save						controllers.TargetController.saveBlank()
